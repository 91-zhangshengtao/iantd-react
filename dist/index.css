@charset "UTF-8";
*,
*::before,
*::after {
  box-sizing: border-box; }

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  background-color: #fff;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

[tabindex="-1"]:focus:not(:focus-visible) {
  outline: 0 !important; }

hr {
  margin: 1rem 0;
  color: inherit;
  background-color: currentColor;
  border: 0;
  opacity: 0.25; }

hr:not([size]) {
  height: 1px; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2; }

h1 {
  font-size: 2.5rem; }

h2 {
  font-size: 2rem; }

h3 {
  font-size: 1.75rem; }

h4 {
  font-size: 1.5rem; }

h5 {
  font-size: 1.25rem; }

h6 {
  font-size: 1rem; }

p {
  margin-top: 0;
  margin-bottom: 1rem; }

abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  text-decoration: underline dotted;
  cursor: help;
  text-decoration-skip-ink: none; }

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit; }

ol,
ul {
  padding-left: 2rem; }

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem; }

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0; }

dt {
  font-weight: 700; }

dd {
  margin-bottom: .5rem;
  margin-left: 0; }

blockquote {
  margin: 0 0 1rem; }

b,
strong {
  font-weight: bolder; }

small {
  font-size: 0.875em; }

sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

a {
  color: #0d6efd;
  text-decoration: none; }
  a:hover {
    color: #024dbc;
    text-decoration: underline; }

a:not([href]), a:not([href]):hover {
  color: inherit;
  text-decoration: none; }

pre,
code,
kbd,
samp {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 1em; }

pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em; }
  pre code {
    font-size: inherit;
    color: inherit;
    word-break: normal; }

code {
  font-size: 0.875em;
  color: #d63384;
  word-wrap: break-word; }
  a > code {
    color: inherit; }

figure {
  margin: 0 0 1rem; }

img {
  vertical-align: middle; }

svg {
  overflow: hidden;
  vertical-align: middle; }

table {
  border-collapse: collapse; }

caption {
  padding-top: .5rem;
  padding-bottom: .5rem;
  color: #6c757d;
  text-align: left;
  caption-side: bottom; }

th {
  text-align: inherit; }

label {
  display: inline-block;
  margin-bottom: .5rem; }

button {
  border-radius: 0; }

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

select {
  word-wrap: normal; }

[list]::-webkit-calendar-picker-indicator {
  display: none; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }
  button:not(:disabled),
  [type="button"]:not(:disabled),
  [type="reset"]:not(:disabled),
  [type="submit"]:not(:disabled) {
    cursor: pointer; }

::-moz-focus-inner {
  padding: 0;
  border-style: none; }

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  -webkit-appearance: textfield; }

textarea {
  overflow: auto;
  resize: vertical; }

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0; }

legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal; }

mark {
  padding: 0.2em;
  background-color: #fcf8e3; }

progress {
  vertical-align: baseline; }

::-webkit-datetime-edit {
  overflow: visible;
  line-height: 0; }

[type="search"] {
  outline-offset: -2px;
  -webkit-appearance: textfield; }

::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-color-swatch-wrapper {
  padding: 0; }

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button; }

output {
  display: inline-block; }

summary {
  display: list-item;
  cursor: pointer; }

template {
  display: none; }

main {
  display: block; }

[hidden] {
  display: none !important; }

/*
  @include button-size( $btn-padding-y,  $btn-padding-x,  $btn-font-size,  $border-radius);
*/
.zoom-in-top-enter {
  opacity: 0;
  transform: scaleY(0); }

.zoom-in-top-enter-active {
  opacity: 1;
  transform: scaleY(1);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: center top; }

.zoom-in-top-exit {
  opacity: 1; }

.zoom-in-top-exit-active {
  opacity: 0;
  transform: scaleY(0);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: center top; }

.zoom-in-left-enter {
  opacity: 0;
  transform: scale(0.45, 0.45); }

.zoom-in-left-enter-active {
  opacity: 1;
  transform: scale(1, 1);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: top left; }

.zoom-in-left-exit {
  opacity: 1; }

.zoom-in-left-exit-active {
  opacity: 0;
  transform: scale(0.45, 0.45);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: top left; }

.zoom-in-right-enter {
  opacity: 0;
  transform: scale(0.45, 0.45); }

.zoom-in-right-enter-active {
  opacity: 1;
  transform: scale(1, 1);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: top right; }

.zoom-in-right-exit {
  opacity: 1; }

.zoom-in-right-exit-active {
  opacity: 0;
  transform: scale(0.45, 0.45);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: top right; }

.zoom-in-bottom-enter {
  opacity: 0;
  transform: scaleY(0); }

.zoom-in-bottom-enter-active {
  opacity: 1;
  transform: scaleY(1);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: center bottom; }

.zoom-in-bottom-exit {
  opacity: 1; }

.zoom-in-bottom-exit-active {
  opacity: 0;
  transform: scaleY(0);
  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms, opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  transform-origin: center bottom; }

.btn {
  position: relative;
  display: inline-block;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  white-space: nowrap;
  text-align: center;
  vertical-align: middle;
  background-image: none;
  border: 1px solid transparent;
  /*
    @mixin button-size($padding-y, $padding-x, $font-size, $border-raduis) {
      padding: $padding-y $padding-x;
      font-size: $font-size;
      border-radius: $border-raduis;
    }
  */
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  border-radius: 0.25rem;
  /* 盒子阴影
     语法结构：box-shadow: inset 水平偏移 垂直偏移 羽化值（可无） 阴影外延值（可无） 阴影颜色，后面可以重复
                          inset 表示阴影类型为内阴影，设置为空时，则表示类型为外阴影。
     demo:    box-shadow: inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;
  */
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
  cursor: pointer;
  /*过渡
      1.样式改变不一样非要用：：hover
      2.transition也可以加到：：hover里，但效果不一样，回来就没有过渡了
    使用
      1.transition-property:用来指定具有过渡效果的属性
            transition-property:all;
            参数：all 表示所有样式（默认）
      2.transition-duration:用来指定过渡的时间  必须设置

      3.transition-delay:用来设置延迟时间
      4.transition-timing-function:设置动画的类型
                参数：linear(匀速)     ease（变速 快-慢-快）   steps(5) （五个步骤）
      5. 合起规则：没有规则 随便写 
                  但是
                  第一个时间：过渡的时间
                  第二个时间：延迟的时间
                  transition: 2s  1s  steps(10);
    demo:    transition: color .15s ease-in-out, background-color .15s ease-in-out, 
                         border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;
  */
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }
  .btn.disabled, .btn[disabled] {
    cursor: not-allowed;
    opacity: 0.65;
    box-shadow: none; }
    .btn.disabled > *, .btn[disabled] > * {
      pointer-events: none; }

.btn-lg {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  border-radius: 0.3rem; }

.btn-sm {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: 0.2rem; }

.btn-primary {
  color: #fff;
  background: #0d6efd;
  border-color: #0d6efd; }
  .btn-primary:hover {
    color: #fff;
    background: #3385fd;
    border-color: #408cfd; }
  .btn-primary:focus, .btn-primary.focus {
    color: #fff;
    background: #3385fd;
    border-color: #408cfd; }
  .btn-primary:disabled, .btn-primary.disabled {
    color: #fff;
    background: #0d6efd;
    border-color: #0d6efd; }

.btn-danger {
  color: #fff;
  background: #dc3545;
  border-color: #dc3545; }
  .btn-danger:hover {
    color: #fff;
    background: #e25663;
    border-color: #e4606d; }
  .btn-danger:focus, .btn-danger.focus {
    color: #fff;
    background: #e25663;
    border-color: #e4606d; }
  .btn-danger:disabled, .btn-danger.disabled {
    color: #fff;
    background: #dc3545;
    border-color: #dc3545; }

.btn-default {
  color: #212529;
  background: #fff;
  border-color: #ced4da; }
  .btn-default:hover {
    color: #0d6efd;
    background: #fff;
    border-color: #0d6efd; }
  .btn-default:focus, .btn-default.focus {
    color: #0d6efd;
    background: #fff;
    border-color: #0d6efd; }
  .btn-default:disabled, .btn-default.disabled {
    color: #212529;
    background: #fff;
    border-color: #ced4da; }

.btn-link {
  font-weight: 400;
  color: #0d6efd;
  text-decoration: none;
  box-shadow: none; }
  .btn-link:hover {
    color: #024dbc;
    text-decoration: underline; }
  .btn-link:focus, .btn-link.focus {
    text-decoration: underline;
    box-shadow: none; }
  .btn-link:disabled, .btn-link.disabled {
    color: #6c757d;
    pointer-events: none; }

/*
  <ul className="viking-menu menu-vertical/menu-horizontal">
      <li className="menu-item is-disabled is-active">item11</li>

      <li className="menu-item submenu-item is-active is-opened is-vertical">
        <div className="submenu-title">title</div> 
        <ul className="viking-submenu menu-opened">
          <li>item21</li>
          <li className="menu-item is-disabled is-active">item22</li>
        </ul>
      </li>
  </ul>
*/
.viking-menu {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 30px;
  list-style: none;
  border-bottom: 1px solid #dee2e6;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075); }
  .viking-menu > .menu-item {
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out; }
    .viking-menu > .menu-item:hover, .viking-menu > .menu-item:focus {
      text-decoration: none; }
    .viking-menu > .menu-item.is-disabled {
      color: #6c757d;
      pointer-events: none;
      cursor: default; }
    .viking-menu > .menu-item.is-active, .viking-menu > .menu-item:hover {
      color: #0d6efd;
      border-bottom: 2px solid #0d6efd; }
  .viking-menu .submenu-item {
    position: relative; }
    .viking-menu .submenu-item .submenu-title {
      display: flex;
      align-items: center; }
    .viking-menu .submenu-item .arrow-icon {
      transition: transform .25s ease-in-out;
      margin-left: 3px; }
    .viking-menu .submenu-item:hover .arrow-icon {
      transform: rotate(180deg); }
  .viking-menu .is-vertical .arrow-icon {
    transform: rotate(0deg) !important; }
  .viking-menu .is-vertical.is-opened .arrow-icon {
    transform: rotate(180deg) !important; }
  .viking-menu .viking-submenu {
    list-style: none;
    padding-left: 0;
    white-space: nowrap; }
    .viking-menu .viking-submenu .menu-item {
      padding: 0.5rem 1rem;
      cursor: pointer;
      transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out;
      color: #212529; }
      .viking-menu .viking-submenu .menu-item.is-active, .viking-menu .viking-submenu .menu-item:hover {
        color: #0d6efd !important; }

/* 横向 */
.menu-horizontal > .menu-item {
  border-bottom: 2px solid transparent; }

.menu-horizontal .viking-submenu {
  position: absolute;
  background: #fff;
  z-index: 100;
  top: calc(100% + 8px);
  left: 0;
  border: 1px solid #dee2e6;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04); }

/* 纵向 */
.menu-vertical {
  flex-direction: column;
  border-bottom: 0px;
  margin: 10px 20px;
  border-right: 1px solid #dee2e6; }
  .menu-vertical > .menu-item {
    border-left: 2px solid transparent; }
    .menu-vertical > .menu-item.is-active, .menu-vertical > .menu-item:hover {
      border-bottom: 0px;
      border-left: 2px solid #0d6efd; }

.icon-primary {
  color: #0d6efd; }

.icon-secondary {
  color: #6c757d; }

.icon-success {
  color: #52c41a; }

.icon-info {
  color: #17a2b8; }

.icon-warning {
  color: #fadb14; }

.icon-danger {
  color: #dc3545; }

.icon-light {
  color: #f8f9fa; }

.icon-dark {
  color: #343a40; }

/*
   <div className="viking-input-wrapper input-size-lg is-disabled input-group input-group-prepend/input-group-append " >
      <div className="viking-input-group-prepend">prepend</div>
      <div className="icon-wrapper"><Icon icon={icon} title={`title-${icon}`}/></div>
      <input 
        className="viking-input-inner"
        disabled={disabled}
      />
      <div className="viking-input-group-append">append</div>
    </div>
  */
/** wrapper */
.viking-input-wrapper {
  display: flex;
  width: 100%;
  margin-bottom: 30px;
  position: relative; }
  .viking-input-wrapper .icon-wrapper {
    position: absolute;
    height: 100%;
    width: 35px;
    justify-content: center;
    color: #495057;
    right: 0;
    top: 0;
    display: flex;
    align-items: center; }
    .viking-input-wrapper .icon-wrapper svg {
      color: #6c757d; }

/** viking-input-inner(input) */
.icon-wrapper + .viking-input-inner {
  padding-right: 35px; }

.viking-input-inner {
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #495057;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075);
  transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out; }
  .viking-input-inner:focus {
    color: #495057;
    background-color: #fff;
    border-color: #8bbafe;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25); }
  .viking-input-inner::placeholder {
    color: #6c757d;
    opacity: 1; }
  .viking-input-inner:disabled, .viking-input-inner[readonly] {
    background-color: #e9ecef;
    opacity: 1; }

/** prepend  append */
.viking-input-group-prepend,
.viking-input-group-append {
  display: flex;
  align-items: center;
  padding: 0.375rem 0.75rem;
  margin-bottom: 0;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #495057;
  text-align: center;
  white-space: nowrap;
  background-color: #e9ecef;
  border: 1px solid #ced4da;
  border-radius: 0.25rem; }

.viking-input-group-append + .btn {
  padding: 0;
  border: 0; }

.input-group > .viking-input-group-prepend,
.input-group.input-group-append > .viking-input-inner {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0; }

.input-group > .viking-input-group-append,
.input-group.input-group-prepend > .viking-input-inner {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0; }

.input-size-sm .viking-input-inner {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: 0.2rem; }

.input-size-lg .viking-input-inner {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  border-radius: 0.3rem; }

/*
  <div className="viking-auto-complete" ref={componentRef}>
      <Input
        value={inputValue}
        onChange={handleChange}
        onKeyDown={handleKeyDown}
        {...restProps}
      />
       <ul className="viking-suggestion-list">
          <div className="suggstions-loading-icon">
              <Icon icon="spinner" spin/>
          </div>
          
          {suggestions.map((item, index) => {
            return (
              <li key={index} className="suggestion-item is-active" onClick={() => handleSelect(item)}>
                {renderTemplate(item)}
              </li>
            )
          })}
        </ul>
  </div>
*/
/** wrapper */
.viking-auto-complete {
  position: relative; }
  .viking-auto-complete .viking-input-wrapper {
    margin-bottom: 0px; }

/** .viking-suggestion-list(ul) */
.viking-suggestion-list {
  list-style: none;
  padding-left: 0;
  white-space: nowrap;
  position: absolute;
  background: #fff;
  z-index: 100;
  top: calc(100% + 8px);
  left: 0;
  border: 1px solid #dee2e6;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);
  width: 100%; }
  .viking-suggestion-list .suggstions-loading-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 75px; }
  .viking-suggestion-list .suggestion-item {
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    color: #212529; }
    .viking-suggestion-list .suggestion-item.is-active {
      background: #0d6efd !important;
      color: #fff !important; }
    .viking-suggestion-list .suggestion-item:hover {
      color: #0d6efd !important; }

/*
    <div className="viking-upload-component">
    ===================================1-1 upload-input wrapper ========================================
      <div className="viking-upload-input"  style={{display: 'inline-block'}}>

        ---------------------------------拖拽wrapper----------------------------
        <div className="viking-uploader-dragger is-dragover">children</div>
          
        -----------------------------input type="file" -----------------
        <input className="viking-file-input" style={{display: 'none'}} type="file" />
      </div>

    =====================================1-2 uploadlist wrapper==================================================
      <ul className="viking-upload-list">
          // 单个filelist (li)
          <li className="viking-upload-list-item">

            ````````````````````````` fileName + iconFont````````````````
            <span className="file-name file-name-success"">
              <Icon icon="file-alt" theme="secondary" />
              {item.name} 
            </span>

            ````````````````````````` icon status 不hover的样式`````````````````````````
            <span className="file-status">
              <Icon icon="spinner" spin theme="primary" />
              <Icon icon="check-circle" theme="success" />
              <Icon icon="times-circle" theme="danger" />
            </span>

            ``````````````````` icon actions --伪类 hover的样式 ``````
            <span className="file-actions">
              <Icon icon="times"/>
            </span>

            -----------------------------------Progress组件------------------
            // bar-wrapper process 
            <div className="viking-progress-bar" style={styles}>
              // 灰色bar-outer
              <div className="viking-progress-bar-outer" style={{ height: `${strokeHeight}px`}}>
                // theme bar-inner
                <div className=`viking-progress-bar-inner color-success` style="width:30%">
                  <span className="inner-text">30%</span>
                </div>
              </div>
            </div>
          </li>
      </ul>
    </div>
*/
/* uploadlist wrapper */
.viking-upload-list {
  margin: 0;
  padding: 0;
  list-style-type: none; }

/* 拖拽 wrapper */
.viking-uploader-dragger {
  background: #f8f9fa;
  border: 1px dashed #dee2e6;
  border-radius: 4px;
  cursor: pointer;
  padding: 20px;
  width: 360px;
  height: 180px;
  text-align: center; }
  .viking-uploader-dragger:hover {
    border: 1px dashed #0d6efd; }
  .viking-uploader-dragger.is-dragover {
    border: 2px dashed #0d6efd;
    background: rgba(13, 110, 253, 0.2); }

/* 单个filelist (li) */
.viking-upload-list-item {
  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);
  font-size: 14px;
  line-height: 1.8;
  margin-top: 5px;
  box-sizing: border-box;
  border-radius: 4px;
  min-width: 200px;
  position: relative; }
  .viking-upload-list-item:first-child {
    margin-top: 10px; }
  .viking-upload-list-item .file-name {
    margin-left: 5px;
    margin-right: 40px; }
    .viking-upload-list-item .file-name svg {
      margin-right: 5px;
      color: #adb5bd; }
  .viking-upload-list-item .file-name-error {
    color: #dc3545; }
    .viking-upload-list-item .file-name-error svg {
      color: #dc3545; }
  .viking-upload-list-item .file-status {
    display: block;
    position: absolute;
    right: 5px;
    top: 0;
    line-height: inherit; }
  .viking-upload-list-item .file-actions {
    display: none;
    position: absolute;
    right: 7px;
    top: 0;
    line-height: inherit;
    cursor: pointer; }
  .viking-upload-list-item:hover {
    background-color: #e9ecef; }
    .viking-upload-list-item:hover .file-status {
      display: none; }
    .viking-upload-list-item:hover .file-actions {
      display: block; }

/*
    //bar-wrapper process
    <div className="viking-progress-bar" style={styles}>
      // 灰色bar-outer
      <div className="viking-progress-bar-outer" style={{ height: `${strokeHeight}px`}}>
        // theme bar-inner
        <div className=`viking-progress-bar-inner color-success` style="width:30%">
          <span className="inner-text">30%</span>
        </div>
      </div>
    </div>
*/
/* bar-wrapper process */
.viking-progress-bar {
  width: 100%;
  box-sizing: border-box; }
  .viking-progress-bar .viking-progress-bar-outer {
    border-radius: 0.25rem;
    background-color: #e9ecef;
    overflow: hidden;
    position: relative; }
  .viking-progress-bar .viking-progress-bar-inner {
    position: absolute;
    left: 0;
    top: 0;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    height: 100%;
    border-radius: 0.25rem;
    line-height: 1;
    transition: width 0.6s ease; }
    .viking-progress-bar .viking-progress-bar-inner .inner-text {
      color: #fff;
      font-size: 0.75rem;
      margin: 0 5px; }
  .viking-progress-bar .color-primary {
    background-color: #0d6efd; }
  .viking-progress-bar .color-secondary {
    background-color: #6c757d; }
  .viking-progress-bar .color-success {
    background-color: #52c41a; }
  .viking-progress-bar .color-info {
    background-color: #17a2b8; }
  .viking-progress-bar .color-warning {
    background-color: #fadb14; }
  .viking-progress-bar .color-danger {
    background-color: #dc3545; }
  .viking-progress-bar .color-light {
    background-color: #f8f9fa; }
  .viking-progress-bar .color-dark {
    background-color: #343a40; }
